df <- kNN(df, k=3)
df_cols = names(df)
df_cols
df_cols = names(df[c(15, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 40, 41)])
df$podium = ifelse(df$place<=1, 1,0)
whichcols <- Reduce("c", map(1:length(df_cols), ~lapply(iter(combn(df_cols,.x), by="col"),function(y) c(y))))
models <- map(1:length(whichcols), ~glm((podium) ~., data=df[c(whichcols[[.x]], "podium")], family = binomial))
models.lm <- map(1:length(whichcols), ~lm((podium) ~., data=df[c(whichcols[[.x]], "podium")], family = binomial))
bestAIC <- models[[which.min(sapply(1:length(models),function(x)AIC(models[[x]])))]]
bestBIC <- models[[which.min(sapply(1:length(models),function(x)BIC(models[[x]])))]]
bestR2 <- models.lm[[which.max(sapply(1:length(models.lm),function(x)summary(models.lm[[x]])$adj.r.squared))]]
summary(bestAIC)
summary(bestBIC)
summary(bestR2)
print("AIC")
paste(names(bestAIC$coefficients[2:length(names(bestAIC$coefficients))]), collapse= "', '")
print("BIC")
paste(names(bestBIC$coefficients[2:length(names(bestBIC$coefficients))]), collapse= "', '")
print("R2")
paste(names(bestR2$coefficients[2:length(names(bestR2$coefficients))]), collapse="', '")
df$predictAIC = predict(bestAIC, df, type="response")
df$predictBIC = predict(bestBIC, df, type="response")
df$predictR2 = predict(bestR2, df, type="response")
df_wins = df[which(df$podium==1), ]
df_wins$name
plot(df_wins$date, df_wins$predictAIC)
df_wins[,c(3,10,46,47)]
df_wins
colnames(df_wins)
show_df<-df[, c(3, 10, 90, 91)]
df
show_df
df_wins[,c(3,10,91,92)]
gc()
library(readxl)
library(fmsb)
library(ggplot2)
library(purrr)
library(iterators)
library(lmtest)
library(VIM)
x <- read_excel("/Users/syverjohansen/ski/elo/python/ski/age/excel365/ladies_chrono_regress_sprint_freestyle.xlsx",
sheet = "Sheet1", col_names = TRUE, na = "NA", guess_max = 100000)
##Optional, but make pelopct the comparise against the alltime maximum
#max_elo = max(ladies$elo)
#ladies$pelopct = ladies$pelo/max_elo
df <- data.frame(x)
#df <- df[which(df$pelo>=80), ]
#df <- df[which(df$total_pelo!=1300)]
df <- df[which(df$season>=2019),]
df <- kNN(df, k=3)
library(readxl)
library(fmsb)
library(ggplot2)
library(purrr)
library(iterators)
library(lmtest)
library(VIM)
x <- read_excel("/Users/syverjohansen/ski/elo/python/ski/age/excel365/ladies_chrono_regress_sprint_freestyle.xlsx",
sheet = "Sheet1", col_names = TRUE, na = "NA", guess_max = 100000)
##Optional, but make pelopct the comparise against the alltime maximum
#max_elo = max(ladies$elo)
#ladies$pelopct = ladies$pelo/max_elo
df <- data.frame(x)
#df <- df[which(df$pelo>=80), ]
#df <- df[which(df$total_pelo!=1300)]
df <- df[which(df$season>=2019),]
df <- kNN(df, k=3)
colnames(df)
df_cols = names(df)
df_cols
df_cols = names(df[c(15, 16, 61, 63, 65, 67, 69, 71, 73, 75, 77, 84, 85)])
df$podium = ifelse(df$place<=1, 1,0)
whichcols <- Reduce("c", map(1:length(df_cols), ~lapply(iter(combn(df_cols,.x), by="col"),function(y) c(y))))
models <- map(1:length(whichcols), ~glm((podium) ~., data=df[c(whichcols[[.x]], "podium")], family = binomial))
models.lm <- map(1:length(whichcols), ~lm((podium) ~., data=df[c(whichcols[[.x]], "podium")], family = binomial))
bestAIC <- models[[which.min(sapply(1:length(models),function(x)AIC(models[[x]])))]]
bestBIC <- models[[which.min(sapply(1:length(models),function(x)BIC(models[[x]])))]]
bestR2 <- models.lm[[which.max(sapply(1:length(models.lm),function(x)summary(models.lm[[x]])$adj.r.squared))]]
summary(bestAIC)
summary(bestBIC)
summary(bestR2)
print("AIC")
paste(names(bestAIC$coefficients[2:length(names(bestAIC$coefficients))]), collapse= "', '")
print("BIC")
paste(names(bestBIC$coefficients[2:length(names(bestBIC$coefficients))]), collapse= "', '")
print("R2")
paste(names(bestR2$coefficients[2:length(names(bestR2$coefficients))]), collapse="', '")
df$predictAIC = predict(bestAIC, df, type="response")
df$predictBIC = predict(bestBIC, df, type="response")
df$predictR2 = predict(bestR2, df, type="response")
df_wins = df[which(df$podium==1), ]
df_wins$name
plot(df_wins$date, df_wins$predictAIC)
df_wins[,c(3,10,91,92)]
df_wins[,c(3,10,90,91)]
gc()
?kNN
x <- read_excel("/Users/syverjohansen/ski/elo/python/ski/age/excel365/ladies_chrono_regress_sprint_freestyle.xlsx",
sheet = "Sheet1", col_names = TRUE, na = "NA", guess_max = 100000)
##Optional, but make pelopct the comparise against the alltime maximum
#max_elo = max(ladies$elo)
#ladies$pelopct = ladies$pelo/max_elo
df <- data.frame(x)
#df <- df[which(df$pelo>=80), ]
#df <- df[which(df$total_pelo!=1300)]
df <- df[which(df$season>=2019),]
df[which(df$name == "Kristine Stavås Skistad"), ]
df_impute <- kNN(df, k=3)
df_impute[which(df_impute$name=="Kristine Stavås Skistad"), ]
gc()
x <- read_excel("/Users/syverjohansen/ski/elo/python/ski/age/excel365/ladies_chrono_regress_sprint_freestyle.xlsx",
sheet = "Sheet1", col_names = TRUE, na = "NA", guess_max = 100000)
##Optional, but make pelopct the comparise against the alltime maximum
#max_elo = max(ladies$elo)
#ladies$pelopct = ladies$pelo/max_elo
df <- data.frame(x)
#df <- df[which(df$pelo>=80), ]
#df <- df[which(df$total_pelo!=1300)]
df <- df[which(df$season>=2019),]
colnames(df)[1]
colnames(df)[2]
colnames(df)[1,2]
colnames(df)[c(1,2)]
x <- read_excel("/Users/syverjohansen/ski/elo/python/ski/age/excel365/ladies_chrono_regress_sprint_freestyle.xlsx",
sheet = "Sheet1", col_names = TRUE, na = "NA", guess_max = 100000)
df <- data.frame(x)
#df <- df[which(df$pelo>=80), ]
#df <- df[which(df$total_pelo!=1300)]
df <- df[which(df$season>=2019),]
df[which(df$name == "Kristine Stavås Skistad"), ]
df_impute <- kNN(df,variable = colnames(df)[c(15, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 40, 41)]  ,k=3)
df_impute[which(df_impute$name=="Kristine Stavås Skistad"), ]
colnames(df)
df_cols = names(df)
df_cols
df_cols = names(df[c(15, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 40, 41)])
df$podium = ifelse(df$place<=1, 1,0)
whichcols <- Reduce("c", map(1:length(df_cols), ~lapply(iter(combn(df_cols,.x), by="col"),function(y) c(y))))
models <- map(1:length(whichcols), ~glm((podium) ~., data=df[c(whichcols[[.x]], "podium")], family = binomial))
library(readxl)
library(fmsb)
library(ggplot2)
library(purrr)
library(iterators)
library(lmtest)
library(VIM)
x <- read_excel("/Users/syverjohansen/ski/elo/python/ski/age/excel365/ladies_chrono_regress_sprint_freestyle.xlsx",
sheet = "Sheet1", col_names = TRUE, na = "NA", guess_max = 100000)
##Optional, but make pelopct the comparise against the alltime maximum
#max_elo = max(ladies$elo)
#ladies$pelopct = ladies$pelo/max_elo
df <- data.frame(x)
#df <- df[which(df$pelo>=80), ]
#df <- df[which(df$total_pelo!=1300)]
df <- df[which(df$season>=2019),]
df[which(df$name == "Kristine Stavås Skistad"), ]
df_impute <- kNN(df,variable = colnames(df)[c(15, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 40, 41)]  ,k=3)
df_impute[which(df_impute$name=="Kristine Stavås Skistad"), ]
colnames(df)
df_cols = names(df)
df_cols
df_cols = names(df[c(15, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 40, 41)])
df$podium = ifelse(df$place<=1, 1,0)
whichcols <- Reduce("c", map(1:length(df_cols), ~lapply(iter(combn(df_cols,.x), by="col"),function(y) c(y))))
models <- map(1:length(whichcols), ~glm((podium) ~., data=df[c(whichcols[[.x]], "podium")], family = binomial))
models.lm <- map(1:length(whichcols), ~lm((podium) ~., data=df[c(whichcols[[.x]], "podium")], family = binomial))
bestAIC <- models[[which.min(sapply(1:length(models),function(x)AIC(models[[x]])))]]
bestBIC <- models[[which.min(sapply(1:length(models),function(x)BIC(models[[x]])))]]
bestR2 <- models.lm[[which.max(sapply(1:length(models.lm),function(x)summary(models.lm[[x]])$adj.r.squared))]]
summary(bestAIC)
summary(bestBIC)
summary(bestR2)
print("AIC")
paste(names(bestAIC$coefficients[2:length(names(bestAIC$coefficients))]), collapse= "', '")
print("BIC")
paste(names(bestBIC$coefficients[2:length(names(bestBIC$coefficients))]), collapse= "', '")
print("R2")
paste(names(bestR2$coefficients[2:length(names(bestR2$coefficients))]), collapse="', '")
df$predictAIC = predict(bestAIC, df, type="response")
df$predictBIC = predict(bestBIC, df, type="response")
df$predictR2 = predict(bestR2, df, type="response")
df_wins = df[which(df$podium==1), ]
df_wins$name
plot(df_wins$date, df_wins$predictAIC)
df_wins[,c(3,10,91,92)]
names(df_wins)
gc()
library(readxl)
library(fmsb)
library(ggplot2)
library(purrr)
library(iterators)
library(lmtest)
library(VIM)
x <- read_excel("/Users/syverjohansen/ski/elo/python/ski/age/excel365/ladies_chrono_regress_sprint_freestyle.xlsx",
sheet = "Sheet1", col_names = TRUE, na = "NA", guess_max = 100000)
##Optional, but make pelopct the comparise against the alltime maximum
#max_elo = max(ladies$elo)
#ladies$pelopct = ladies$pelo/max_elo
df <- data.frame(x)
#df <- df[which(df$pelo>=80), ]
#df <- df[which(df$total_pelo!=1300)]
df <- df[which(df$season>=2019),]
df[which(df$name == "Kristine Stavås Skistad"), ]
df_impute <- kNN(df,variable = colnames(df)[c(15, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 40, 41)]  ,k=3)
df_impute[which(df_impute$name=="Kristine Stavås Skistad"), ]
df <- df_impute
colnames(df)
df_cols = names(df)
df_cols
df_cols = names(df[c(15, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 40, 41)])
df$podium = ifelse(df$place<=1, 1,0)
whichcols <- Reduce("c", map(1:length(df_cols), ~lapply(iter(combn(df_cols,.x), by="col"),function(y) c(y))))
models <- map(1:length(whichcols), ~glm((podium) ~., data=df[c(whichcols[[.x]], "podium")], family = binomial))
models.lm <- map(1:length(whichcols), ~lm((podium) ~., data=df[c(whichcols[[.x]], "podium")], family = binomial))
bestAIC <- models[[which.min(sapply(1:length(models),function(x)AIC(models[[x]])))]]
bestBIC <- models[[which.min(sapply(1:length(models),function(x)BIC(models[[x]])))]]
bestR2 <- models.lm[[which.max(sapply(1:length(models.lm),function(x)summary(models.lm[[x]])$adj.r.squared))]]
summary(bestAIC)
summary(bestBIC)
summary(bestR2)
print("AIC")
paste(names(bestAIC$coefficients[2:length(names(bestAIC$coefficients))]), collapse= "', '")
print("BIC")
paste(names(bestBIC$coefficients[2:length(names(bestBIC$coefficients))]), collapse= "', '")
print("R2")
paste(names(bestR2$coefficients[2:length(names(bestR2$coefficients))]), collapse="', '")
df$predictAIC = predict(bestAIC, df, type="response")
df$predictBIC = predict(bestBIC, df, type="response")
df$predictR2 = predict(bestR2, df, type="response")
df_wins = df[which(df$podium==1), ]
df_wins$name
plot(df_wins$date, df_wins$predictAIC)
df_wins[,c(3,10,91,92)]
colnames(df_wins)
df_wins[,c(3,10,59,60)]
gc()
library(readxl)
library(fmsb)
library(ggplot2)
library(purrr)
library(iterators)
library(lmtest)
library(VIM)
x <- read_excel("/Users/syverjohansen/ski/elo/python/ski/age/excel365/men_chrono_regress_distance_freestyle.xlsx",
sheet = "Sheet1", col_names = TRUE, na = "NA", guess_max = 100000)
##Optional, but make pelopct the comparise against the alltime maximum
#max_elo = max(ladies$elo)
#ladies$pelopct = ladies$pelo/max_elo
df <- data.frame(x)
#df <- df[which(df$pelo>=80), ]
#df <- df[which(df$total_pelo!=1300)]
df <- df[which(df$season>=2019),]
df[which(df$name == "Kristine Stavås Skistad"), ]
df_impute <- kNN(df,variable = colnames(df)[c(15, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 40, 41)]  ,k=3)
df_impute[which(df_impute$name=="Kristine Stavås Skistad"), ]
df <- df_impute
colnames(df)
df_cols = names(df)
df_cols
df_cols = names(df[c(15, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 40, 41)])
df$podium = ifelse(df$place<=1, 1,0)
whichcols <- Reduce("c", map(1:length(df_cols), ~lapply(iter(combn(df_cols,.x), by="col"),function(y) c(y))))
models <- map(1:length(whichcols), ~glm((podium) ~., data=df[c(whichcols[[.x]], "podium")], family = binomial))
library(readxl)
library(fmsb)
library(ggplot2)
library(purrr)
library(iterators)
library(lmtest)
library(VIM)
x <- read_excel("/Users/syverjohansen/ski/elo/python/ski/age/excel365/men_chrono_regress_distance_freestyle.xlsx",
sheet = "Sheet1", col_names = TRUE, na = "NA", guess_max = 100000)
##Optional, but make pelopct the comparise against the alltime maximum
#max_elo = max(ladies$elo)
#ladies$pelopct = ladies$pelo/max_elo
df <- data.frame(x)
#df <- df[which(df$pelo>=80), ]
#df <- df[which(df$total_pelo!=1300)]
df <- df[which(df$season>=2019),]
df[which(df$name == "Kristine Stavås Skistad"), ]
df_impute <- kNN(df,variable = colnames(df)[c(15, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 40, 41)]  ,k=3)
df_impute[which(df_impute$name=="Kristine Stavås Skistad"), ]
df <- df_impute
colnames(df)
df_cols = names(df)
df_cols
df_cols = names(df[c(15, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 40, 41)])
df$podium = ifelse(df$place<=1, 1,0)
whichcols <- Reduce("c", map(1:length(df_cols), ~lapply(iter(combn(df_cols,.x), by="col"),function(y) c(y))))
models <- map(1:length(whichcols), ~glm((podium) ~., data=df[c(whichcols[[.x]], "podium")], family = binomial))
#models.lm <- map(1:length(whichcols), ~lm((podium) ~., data=df[c(whichcols[[.x]], "podium")], family = binomial))
bestAIC <- models[[which.min(sapply(1:length(models),function(x)AIC(models[[x]])))]]
bestBIC <- models[[which.min(sapply(1:length(models),function(x)BIC(models[[x]])))]]
#bestR2 <- models.lm[[which.max(sapply(1:length(models.lm),function(x)summary(models.lm[[x]])$adj.r.squared))]]
summary(bestAIC)
summary(bestBIC)
#summary(bestR2)
print("AIC")
paste(names(bestAIC$coefficients[2:length(names(bestAIC$coefficients))]), collapse= "', '")
print("BIC")
paste(names(bestBIC$coefficients[2:length(names(bestBIC$coefficients))]), collapse= "', '")
#print("R2")
#paste(names(bestR2$coefficients[2:length(names(bestR2$coefficients))]), collapse="', '")
df$predictAIC = predict(bestAIC, df, type="response")
df$predictBIC = predict(bestBIC, df, type="response")
#df$predictR2 = predict(bestR2, df, type="response")
df_wins = df[which(df$podium==1), ]
df_wins$name
plot(df_wins$date, df_wins$predictAIC)
df_wins[,c(3,10,59,60)]
gc()
library(readxl)
library(fmsb)
library(ggplot2)
library(purrr)
library(iterators)
library(lmtest)
library(VIM)
x <- read_excel("/Users/syverjohansen/ski/elo/python/ski/age/excel365/ladies_chrono_regress_sprint_freestyle.xlsx",
sheet = "Sheet1", col_names = TRUE, na = "NA", guess_max = 100000)
##Optional, but make pelopct the comparise against the alltime maximum
#max_elo = max(ladies$elo)
#ladies$pelopct = ladies$pelo/max_elo
df <- data.frame(x)
#df <- df[which(df$pelo>=80), ]
#df <- df[which(df$total_pelo!=1300)]
df <- df[which(df$season>=2019),]
df[which(df$name == "Kristine Stavås Skistad"), ]
df_impute <- kNN(df,variable = colnames(df)[c(15, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 40, 41)]  ,k=3)
df_impute[which(df_impute$name=="Kristine Stavås Skistad"), ]
df <- df_impute
colnames(df)
df_cols = names(df)
df_cols
df_cols = names(df[c(15, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 40, 41)])
df$podium = ifelse(df$place<=1, 1,0)
whichcols <- Reduce("c", map(1:length(df_cols), ~lapply(iter(combn(df_cols,.x), by="col"),function(y) c(y))))
models <- map(1:length(whichcols), ~glm((podium) ~., data=df[c(whichcols[[.x]], "podium")], family = binomial))
#models.lm <- map(1:length(whichcols), ~lm((podium) ~., data=df[c(whichcols[[.x]], "podium")], family = binomial))
bestAIC <- models[[which.min(sapply(1:length(models),function(x)AIC(models[[x]])))]]
bestBIC <- models[[which.min(sapply(1:length(models),function(x)BIC(models[[x]])))]]
#bestR2 <- models.lm[[which.max(sapply(1:length(models.lm),function(x)summary(models.lm[[x]])$adj.r.squared))]]
summary(bestAIC)
summary(bestBIC)
#summary(bestR2)
print("AIC")
paste(names(bestAIC$coefficients[2:length(names(bestAIC$coefficients))]), collapse= "', '")
print("BIC")
paste(names(bestBIC$coefficients[2:length(names(bestBIC$coefficients))]), collapse= "', '")
#print("R2")
#paste(names(bestR2$coefficients[2:length(names(bestR2$coefficients))]), collapse="', '")
df$predictAIC = predict(bestAIC, df, type="response")
df$predictBIC = predict(bestBIC, df, type="response")
#df$predictR2 = predict(bestR2, df, type="response")
df_wins = df[which(df$podium==1), ]
df_wins$name
plot(df_wins$date, df_wins$predictAIC)
df_wins[,c(3,10,59,60)]
gc()
library(readxl)
library(fmsb)
library(ggplot2)
library(purrr)
library(iterators)
library(lmtest)
library(VIM)
x <- read_excel("/Users/syverjohansen/ski/elo/python/ski/age/excel365/ladies_chrono_regress_sprint_classic.xlsx",
sheet = "Sheet1", col_names = TRUE, na = "NA", guess_max = 100000)
##Optional, but make pelopct the comparise against the alltime maximum
#max_elo = max(ladies$elo)
#ladies$pelopct = ladies$pelo/max_elo
df <- data.frame(x)
#df <- df[which(df$pelo>=80), ]
#df <- df[which(df$total_pelo!=1300)]
df <- df[which(df$season>=2019),]
df[which(df$name == "Kristine Stavås Skistad"), ]
df_impute <- kNN(df,variable = colnames(df)[c(15, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 40, 41)]  ,k=3)
df_impute[which(df_impute$name=="Kristine Stavås Skistad"), ]
df <- df_impute
colnames(df)
df_cols = names(df)
df_cols
df_cols = names(df[c(15, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 40, 41)])
df$podium = ifelse(df$place<=1, 1,0)
whichcols <- Reduce("c", map(1:length(df_cols), ~lapply(iter(combn(df_cols,.x), by="col"),function(y) c(y))))
models <- map(1:length(whichcols), ~glm((podium) ~., data=df[c(whichcols[[.x]], "podium")], family = binomial))
#models.lm <- map(1:length(whichcols), ~lm((podium) ~., data=df[c(whichcols[[.x]], "podium")], family = binomial))
bestAIC <- models[[which.min(sapply(1:length(models),function(x)AIC(models[[x]])))]]
bestBIC <- models[[which.min(sapply(1:length(models),function(x)BIC(models[[x]])))]]
#bestR2 <- models.lm[[which.max(sapply(1:length(models.lm),function(x)summary(models.lm[[x]])$adj.r.squared))]]
summary(bestAIC)
summary(bestBIC)
#summary(bestR2)
print("AIC")
paste(names(bestAIC$coefficients[2:length(names(bestAIC$coefficients))]), collapse= "', '")
print("BIC")
paste(names(bestBIC$coefficients[2:length(names(bestBIC$coefficients))]), collapse= "', '")
#print("R2")
#paste(names(bestR2$coefficients[2:length(names(bestR2$coefficients))]), collapse="', '")
df$predictAIC = predict(bestAIC, df, type="response")
df$predictBIC = predict(bestBIC, df, type="response")
#df$predictR2 = predict(bestR2, df, type="response")
df_wins = df[which(df$podium==1), ]
df_wins$name
plot(df_wins$date, df_wins$predictAIC)
df_wins[,c(3,10,59,60)]
library(readxl)
library(fmsb)
library(ggplot2)
library(purrr)
library(iterators)
library(lmtest)
library(VIM)
x <- read_excel("/Users/syverjohansen/ski/elo/python/ski/age/excel365/ladies_chrono_regress_distance_classic.xlsx",
sheet = "Sheet1", col_names = TRUE, na = "NA", guess_max = 100000)
##Optional, but make pelopct the comparise against the alltime maximum
#max_elo = max(ladies$elo)
#ladies$pelopct = ladies$pelo/max_elo
df <- data.frame(x)
#df <- df[which(df$pelo>=80), ]
#df <- df[which(df$total_pelo!=1300)]
df <- df[which(df$season>=2019),]
df[which(df$name == "Kristine Stavås Skistad"), ]
df_impute <- kNN(df,variable = colnames(df)[c(15, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 40, 41)]  ,k=3)
df_impute[which(df_impute$name=="Kristine Stavås Skistad"), ]
df <- df_impute
colnames(df)
df_cols = names(df)
df_cols
df_cols = names(df[c(15, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 40, 41)])
df$podium = ifelse(df$place<=1, 1,0)
whichcols <- Reduce("c", map(1:length(df_cols), ~lapply(iter(combn(df_cols,.x), by="col"),function(y) c(y))))
models <- map(1:length(whichcols), ~glm((podium) ~., data=df[c(whichcols[[.x]], "podium")], family = binomial))
#models.lm <- map(1:length(whichcols), ~lm((podium) ~., data=df[c(whichcols[[.x]], "podium")], family = binomial))
bestAIC <- models[[which.min(sapply(1:length(models),function(x)AIC(models[[x]])))]]
bestBIC <- models[[which.min(sapply(1:length(models),function(x)BIC(models[[x]])))]]
#bestR2 <- models.lm[[which.max(sapply(1:length(models.lm),function(x)summary(models.lm[[x]])$adj.r.squared))]]
summary(bestAIC)
summary(bestBIC)
#summary(bestR2)
print("AIC")
paste(names(bestAIC$coefficients[2:length(names(bestAIC$coefficients))]), collapse= "', '")
print("BIC")
paste(names(bestBIC$coefficients[2:length(names(bestBIC$coefficients))]), collapse= "', '")
#print("R2")
#paste(names(bestR2$coefficients[2:length(names(bestR2$coefficients))]), collapse="', '")
df$predictAIC = predict(bestAIC, df, type="response")
df$predictBIC = predict(bestBIC, df, type="response")
#df$predictR2 = predict(bestR2, df, type="response")
df_wins = df[which(df$podium==1), ]
df_wins$name
plot(df_wins$date, df_wins$predictAIC)
df_wins[,c(3,10,59,60)]
gc()
library(readxl)
library(fmsb)
library(ggplot2)
library(purrr)
library(iterators)
library(lmtest)
library(VIM)
x <- read_excel("/Users/syverjohansen/ski/elo/python/ski/age/excel365/ladies_chrono_regress_distance_freestyle.xlsx",
sheet = "Sheet1", col_names = TRUE, na = "NA", guess_max = 100000)
##Optional, but make pelopct the comparise against the alltime maximum
#max_elo = max(ladies$elo)
#ladies$pelopct = ladies$pelo/max_elo
df <- data.frame(x)
#df <- df[which(df$pelo>=80), ]
#df <- df[which(df$total_pelo!=1300)]
df <- df[which(df$season>=2019),]
df[which(df$name == "Kristine Stavås Skistad"), ]
df_impute <- kNN(df,variable = colnames(df)[c(15, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 40, 41)]  ,k=3)
df_impute[which(df_impute$name=="Kristine Stavås Skistad"), ]
df <- df_impute
colnames(df)
df_cols = names(df)
df_cols
df_cols = names(df[c(15, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 40, 41)])
df$podium = ifelse(df$place<=1, 1,0)
whichcols <- Reduce("c", map(1:length(df_cols), ~lapply(iter(combn(df_cols,.x), by="col"),function(y) c(y))))
models <- map(1:length(whichcols), ~glm((podium) ~., data=df[c(whichcols[[.x]], "podium")], family = binomial))
#models.lm <- map(1:length(whichcols), ~lm((podium) ~., data=df[c(whichcols[[.x]], "podium")], family = binomial))
bestAIC <- models[[which.min(sapply(1:length(models),function(x)AIC(models[[x]])))]]
bestBIC <- models[[which.min(sapply(1:length(models),function(x)BIC(models[[x]])))]]
#bestR2 <- models.lm[[which.max(sapply(1:length(models.lm),function(x)summary(models.lm[[x]])$adj.r.squared))]]
summary(bestAIC)
summary(bestBIC)
#summary(bestR2)
print("AIC")
paste(names(bestAIC$coefficients[2:length(names(bestAIC$coefficients))]), collapse= "', '")
print("BIC")
paste(names(bestBIC$coefficients[2:length(names(bestBIC$coefficients))]), collapse= "', '")
#print("R2")
#paste(names(bestR2$coefficients[2:length(names(bestR2$coefficients))]), collapse="', '")
df$predictAIC = predict(bestAIC, df, type="response")
df$predictBIC = predict(bestBIC, df, type="response")
#df$predictR2 = predict(bestR2, df, type="response")
df_wins = df[which(df$podium==1), ]
df_wins$name
plot(df_wins$date, df_wins$predictAIC)
df_wins[,c(3,10,59,60)]
#bestR2 <- models.lm[[which.max(sapply(1:length(models.lm),function(x)summary(models.lm[[x]])$adj.r.squared))]]
bestELO <- glm(podium~distance_freestyle_pelo, family=binomial, data=df)
df$predictELO = predict(bestELO, df, type="response")
#df$predictR2 = predict(bestR2, df, type="response")
df_wins = df[which(df$podium==1), ]
df_wins$name
plot(df_wins$date, df_wins$predictAIC)
df_wins[,c(3,10,59,60,61)]
df_wins[,c(3,10,59,60,61)]
